name: mongo-sharding-repl

services:
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - '27019:27019'
    volumes:
      - config-data:/data/db
    command:
      [
        'mongod',
        '--configsvr',
        '--replSet',
        'config_server',
        '--bind_ip_all',
        '--port',
        '27019',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27019',
        ]
      interval: 5s
      start_period: 10s

  shard1_main:
    image: mongo:latest
    container_name: shard1_main
    restart: always
    ports:
      - '27018:27018'
    volumes:
      - shard1_main-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard1',
        '--bind_ip_all',
        '--port',
        '27018',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27018',
        ]
      interval: 5s
      start_period: 10s

  shard1_repl1:
    image: mongo:latest
    container_name: shard1_repl1
    restart: always
    ports:
      - '27021:27021'
    volumes:
      - shard1_repl1-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard1',
        '--bind_ip_all',
        '--port',
        '27021',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27021',
        ]
      interval: 5s
      start_period: 10s

  shard1_repl2:
    image: mongo:latest
    container_name: shard1_repl2
    restart: always
    ports:
      - '27022:27022'
    volumes:
      - shard1_repl2-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard1',
        '--bind_ip_all',
        '--port',
        '27022',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27022',
        ]
      interval: 5s
      start_period: 10s

  shard1_repl3:
    image: mongo:latest
    container_name: shard1_repl3
    restart: always
    ports:
      - '27023:27023'
    volumes:
      - shard1_repl3-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard1',
        '--bind_ip_all',
        '--port',
        '27023',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27023',
        ]
      interval: 5s
      start_period: 10s

  shard2_main:
    image: mongo:latest
    container_name: shard2_main
    restart: always
    ports:
      - '27020:27020'
    volumes:
      - shard2_main-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard2',
        '--bind_ip_all',
        '--port',
        '27020',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27020',
        ]
      interval: 5s
      start_period: 10s

  shard2_repl1:
    image: mongo:latest
    container_name: shard2_repl1
    restart: always
    ports:
      - '27024:27024'
    volumes:
      - shard2_repl1-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard2',
        '--bind_ip_all',
        '--port',
        '27024',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27024',
        ]
      interval: 5s
      start_period: 10s

  shard2_repl2:
    image: mongo:latest
    container_name: shard2_repl2
    restart: always
    ports:
      - '27025:27025'
    volumes:
      - shard2_repl2-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard2',
        '--bind_ip_all',
        '--port',
        '27025',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27025',
        ]
      interval: 5s
      start_period: 10s

  shard2_repl3:
    image: mongo:latest
    container_name: shard2_repl3
    restart: always
    ports:
      - '27026:27026'
    volumes:
      - shard2_repl3-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard2',
        '--bind_ip_all',
        '--port',
        '27026',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27026',
        ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - router-data:/data/db
    depends_on:
      - configSrv
    command:
      [
        'mongos',
        '--configdb',
        'config_server/configSrv:27019',
        '--bind_ip_all',
        '--port',
        '27017',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27017',
        ]
      interval: 5s
      start_period: 10s

  pymongo_api_sharding:
    container_name: pymongo_api_sharding
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: 'mongodb://mongos_router:27017'
      MONGODB_DATABASE_NAME: 'somedb'

volumes:
  config-data:
  shard1_main-data:
  shard1_repl1-data:
  shard1_repl2-data:
  shard1_repl3-data:
  shard2_main-data:
  shard2_repl1-data:
  shard2_repl2-data:
  shard2_repl3-data:
  router-data:
